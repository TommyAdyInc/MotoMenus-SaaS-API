global-working-directory: &working-directory "/home/circleci"

version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@6.2.0
  aws-ecs: circleci/aws-ecs@0.0.11
jobs:
  build:
    docker:
      # The primary container is an instance of the first image listed. The job's commands run in this container.
      - image: circleci/buildpack-deps:stretch

      # The secondary container is an instance of the second listed image which is run in a common network where ports exposed on the primary container are available on localhost.
      # - image: mysql:5.7.16

    working_directory: *working-directory

    steps:
      - run: echo "Fanning out build steps."

  build-php:
    docker:
      - image: composer:1.8.5

    working_directory: *working-directory

    steps:
      - checkout

      - restore_cache:
          keys:
            - composer-install-v1-{{ .Branch }}-{{ checksum "composer.lock" }}-{{ checksum "composer.json" }}

      - run:
          name: Install Composer dependencies.
          environment:
            COMPOSER_ALLOW_SUPERUSER: 1
          command: composer install --no-interaction --no-progress --prefer-source --verbose

      - save_cache:
          key: composer-install-v1-{{ .Branch }}-{{ checksum "composer.lock" }}-{{ checksum "composer.json" }}
          paths:
            - "vendor"

      - restore_cache:
          keys:
            - env-file-v1-{{ .Branch }}-{{ .Revision }}

      - run:
          name: Create .env file and set values.
          command: |
            cat > .env \<< EOL
            APP_KEY=""
            EOL

      - run:
          name: Generate an APP_KEY for the .env file.
          command: |
            php artisan key:generate
            cat .env

      - save_cache:
          key: env-file-v1-{{ .Branch }}-{{ .Revision }}
          paths:
            - ".env"

workflows:
  version: 2
  main-workflow:
    jobs:
      - build

      - build-php:
          requires:
            - build

      - aws-ecr/build-and-push-image:
          context: 'org-global'
          create-repo: true
          filters:
            branches:
              only:
                - dev
                - prod
          region: AWS_DEFAULT_REGION
          repo: $(echo "$CIRCLE_PROJECT_REPONAME" | tr '[:upper:]' '[:lower:]')
          requires:
            - build
            - build-php
          tag: '${CIRCLE_SHA1}'

      - aws-ecs/deploy-service-update:
          aws-region: ${AWS_DEFAULT_REGION}
          cluster-name: 'ecs-cluster'
          # container-image-name-updates: 'container=$(echo "$CIRCLE_PROJECT_REPONAME" | tr [:upper:] [:lower:])-service,tag=${CIRCLE_SHA1}'
          context: 'org-global'
          family: 'test'
          requires:
            - build
            - build-php
            - aws-ecr/build-and-push-image
          service-name: test-service
